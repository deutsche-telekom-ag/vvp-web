variables:
  GIT_SUBMODULE_STRATEGY: recursive
  #CI_DEBUG_TRACE: "true"

stages:
#  - build
  - deploy


#build_image:
#  image: docker:latest
#  stage: build
#  services:
#    - docker:dind
#  before_script:
#    - docker info
#    - apk update
#    - apk upgrade
#    - apk add python python-dev py-pip build-base
#    - pip install docker-compose
#  script:
#    - docker-compose build

deploy_live:
  variables:
    SSH_USER: gitlab
  stage: deploy
#  only:
#    - master
  image: ubuntu:18.04
  before_script:
    - apt-get update -qqy && apt-get install expect -qqy
    - apt-get install openvpn screen iputils-ping -qqy
    - echo $OVPN_CONFIG | base64 -d > ~/gitlab-runner.ovpn

    # run openvpn in background
    - screen -d -m -S bukkit bash -c 'openvpn --config ~/gitlab-runner.ovpn'
    # mae sure openvpn is up and running and all interfaces are created
    - sleep 1m
    # add routes and print setup (routes are getting pushed by vpn server in the current setup)
    #- export VPN_GATEWAY=$(ip addr show tun0 | awk '/inet / {gsub(/\/.*/,"",$2); print $4}' | cut -d "/" -f1)
    #- export VPN_SUBNET=$(echo $LIVE_URL | tr "." " " | awk ' { print $1"."$2"."$3"."0"/"24 }')
    #- ip route add 10.8.0.0/24 via $(echo $VPN_GATEWAY) dev tun0
    - ip r
    - ip addr
    # wait until $LIVE_URL is reachable
    - until ping -c1 $(echo $LIVE_URL) &>/dev/null; do :; done

    # connect to host
    - 'which ssh-agent || ( apt-get install openssh-client -qqy )'
    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - chmod +x ssh-add-pass.sh
    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    #- echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    # - echo $LIVE_PRIVATE_KEY | base64 -d
    - echo $LIVE_PRIVATE_KEY | base64 -d > ~/.ssh/id_rsa
    # - cat ~/.ssh/id_rsa
    - chmod 0600 ~/.ssh/id_rsa
    - ./ssh-add-pass.sh ~/.ssh/id_rsa
    - ssh-add -l
    - apt-get install rsync -qqy
  script:
    - ssh -p22 $(echo $LIVE_SSH_USER)@$(echo $LIVE_URL) "sudo [ -d '/etc/vvp-web' ] && sudo docker-compose -f /etc/vvp-web/docker-compose.yml down || sudo mkdir -p /etc/vvp-web"
    - rsync -rav -e ssh --rsync-path="sudo rsync" --exclude='./.git/' --exclude='.gitlab-ci.yml' --delete-excluded ./ $(echo $LIVE_SSH_USER)@$(echo $LIVE_URL):/etc/vvp-web/
    - ssh -p22 $(echo $LIVE_SSH_USER)@$(echo $LIVE_URL) "sudo [ ! -d '/etc/vvp-web/git' ] && sudo mkdir /etc/vvp-web/git"
    - ssh -p22 $(echo $LIVE_SSH_USER)@$(echo $LIVE_URL) "sudo docker-compose --version"
    - ssh -p22 $(echo $LIVE_SSH_USER)@$(echo $LIVE_URL) "sudo docker-compose -f ~/vvp-web/tmp/docker-compose.yml up -d --build"