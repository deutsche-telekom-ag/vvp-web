variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CI_DEBUG_TRACE: "true"

stages:
  - build
  - deploy


build_image:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker info
    - apk update
    - apk upgrade
    - apk add python python-dev py-pip build-base
    - pip install docker-compose
  script:
    - docker-compose build

deploy_staging:
  variables:
    SSH_USER: gitlab
  stage: deploy
  image: ubuntu:18.04
  before_script:
    - apt-get update -qqy && apt-get install expect -qqy
    - 'which ssh-agent || ( apt-get install openssh-client -qqy )'
    ##
    ## Create the SSH directory and give it the right permissions
    ##
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - chmod +x ssh-add-pass.sh
    ##
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    ## We're using tr to fix line endings which makes ed25519 keys work
    ## without extra base64 encoding.
    ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
    ##
    #- echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo $STAGING_PRIVATE_KEY | base64 -d
    - echo $STAGING_PRIVATE_KEY | base64 -d > ~/.ssh/id_rsa
    - cat ~/.ssh/id_rsa
    - chmod 0600 ~/.ssh/id_rsa
    - ./ssh-add-pass.sh ~/.ssh/id_rsa
    - ssh-add -l
    - apt-get install rsync -qqy
  script:
    - ssh -p22 $(echo $SSH_USER)@$(echo $STAGING_URL) "mkdir -p ~/vvp-web/tmp"
    - rsync -rav -e ssh --exclude='.git/' --exclude='.gitlab-ci.yml' --delete-excluded ./ $(echo $SSH_USER)@$(echo $STAGING_URL):/vvp-web/tmp
    - ssh -p22 $(echo $SSH_USER)@$(echo $STAGING_URL) "docker-compose -f ~/vvp-web/tmp/docker-compose.yml up -d --build"