#  Developed by Nicholas Dehnen & Vincent Scharf.
#  Copyright (c) 2019 Deutsche Telekom Intellectual Property.
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

server {
    listen 80;
    listen [::]:80;
    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate /server.crt;
    ssl_certificate_key /server.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    # ..not supported on self signed certs, but might be useful in future
    ssl_stapling on;
    ssl_stapling_verify on;

    resolver 1.1.1.1;

    # vvp-web frontent forward
    location / {
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        #Use docker host alias
        proxy_pass http://vvp-web:8913/;
    }

    location /git_init {
        proxy_pass http://vvp-web:8913/git_init/;
    }

    # git-http-backend forward
    location /git/ {
        if ($uri = "/git/") {
            return 418;
        }
        #Use docker host alias
        proxy_pass http://git-http/;
        sub_filter "http://git-http/" "https://$host/git/";
        sub_filter "static/" "/git/static/";
        sub_filter_types *;
        sub_filter_once off;
    }

    # gitweb forward
    #location /gitweb/ {
    #   proxy_pass http://git-http/gitweb/;
    #}

}